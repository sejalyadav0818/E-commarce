// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String ?
  email    String ? @unique
  password String ?
  googleid String?
  hashedRt String ?
  resetToken  String? 
  otp Int  @default(0)
  // isadmin   Boolean ? @default(false)
  role      Role?     @relation(fields: [roleId], references: [id]) 
  roleId    Int?      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  carts                  Cart[]
  orders                 Order[]
}
model Role {
  id          Int       @id @default(autoincrement())
  name        String
  permissions Permission[]
  users        User[]
}

model Permission {
  id     String  @id @default(uuid())
  name   String
  roles Role[]
}

model Product {
  id       Int  @id @default(autoincrement())
  product_name  String
  product_description String
  product_price  String
  product_image  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  catrgory   Category[]
  carts       Cart[]
  orderitems OrderItem[]
}

model Category {
  id    Int    @id @default(autoincrement())
  category_name   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product Product[] 
}


model Cart {
  id                     Int          @id @default(autoincrement())
  userId              Int
  productId             Int
  quantity               Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  total Int
  user                   User         @relation(fields: [userId], references: [id],onDelete: Cascade)
  product                 Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order{
  id        Int    @id @default(autoincrement())
  total Float
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete:Cascade)
  orderItems OrderItem[]
}

model OrderItem{
  id Int @id @default(autoincrement())
  quantity Int
  price Float
  productId Int
  product Product @relation(fields: [productId], references: [id], onDelete:Cascade)
  orderId Int
  order Order @relation(fields: [orderId], references: [id], onDelete:Cascade)
}

